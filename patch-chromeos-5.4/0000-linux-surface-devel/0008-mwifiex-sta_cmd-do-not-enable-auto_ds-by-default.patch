From 9c9f626ac7a8ec1f5a59710bffc2af46f6ab1ec1 Mon Sep 17 00:00:00 2001
From: "Tsuchiya Yuto (kitakar5525)" <kitakar@gmail.com>
Date: Mon, 20 Apr 2020 22:15:54 +0900
Subject: [PATCH 08/10] mwifiex: sta_cmd: do not enable auto_ds by default

(made based on commit https://github.com/sebanc/linux-kernel/commit/5cd03f3e1c01440d0e0bd0cd00a51732c07f99da)

According to the commit this commit is based on, enabling "auto deep
sleep" (auto_ds) causes "suspend/resume fails when not connected to
an Access Point.".

This commit stops enabling auto_ds on driver initialization to fix the
issue.

Signed-off-by: Tsuchiya Yuto (kitakar5525) <kitakar@gmail.com>

(cherry picked from commit cecd1072a9c3e5e4dc7a400b9cc4501c01982e49
from PR #44)
Signed-off-by: Tsuchiya Yuto (kitakar5525) <kitakar@gmail.com>
(cherry picked from commit de3afe868dfd0f1f925437333c21238484b3a535)
Signed-off-by: Tsuchiya Yuto (kitakar5525) <kitakar@gmail.com>
---
 drivers/net/wireless/marvell/mwifiex/sta_cmd.c | 17 ++++-------------
 1 file changed, 4 insertions(+), 13 deletions(-)

diff --git a/drivers/net/wireless/marvell/mwifiex/sta_cmd.c b/drivers/net/wireless/marvell/mwifiex/sta_cmd.c
index 070205a905635..c72a6d77e41b4 100644
--- a/drivers/net/wireless/marvell/mwifiex/sta_cmd.c
+++ b/drivers/net/wireless/marvell/mwifiex/sta_cmd.c
@@ -2254,7 +2254,6 @@ int mwifiex_sta_prepare_cmd(struct mwifiex_private *priv, uint16_t cmd_no,
  *      - Function init (for first interface only)
  *      - Read MAC address (for first interface only)
  *      - Reconfigure Tx buffer size (for first interface only)
- *      - Enable auto deep sleep (for first interface only)
  *      - Get Tx rate
  *      - Get Tx power
  *      - Set IBSS coalescing status
@@ -2267,7 +2266,6 @@ int mwifiex_sta_init_cmd(struct mwifiex_private *priv, u8 first_sta, bool init)
 	struct mwifiex_adapter *adapter = priv->adapter;
 	int ret;
 	struct mwifiex_ds_11n_amsdu_aggr_ctrl amsdu_aggr_ctrl;
-	struct mwifiex_ds_auto_ds auto_ds;
 	enum state_11d_t state_11d;
 	struct mwifiex_ds_11n_tx_cfg tx_cfg;
 	u8 sdio_sp_rx_aggr_enable;
@@ -2384,17 +2382,10 @@ int mwifiex_sta_init_cmd(struct mwifiex_private *priv, u8 first_sta, bool init)
 	if (ret)
 		return -1;
 
-	if (!disable_auto_ds && first_sta &&
-	    priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
-		/* Enable auto deep sleep */
-		auto_ds.auto_ds = DEEP_SLEEP_ON;
-		auto_ds.idle_time = DEEP_SLEEP_IDLE_TIME;
-		ret = mwifiex_send_cmd(priv, HostCmd_CMD_802_11_PS_MODE_ENH,
-				       EN_AUTO_PS, BITMAP_AUTO_DS,
-				       &auto_ds, true);
-		if (ret)
-			return -1;
-	}
+	/* Not enabling auto deep sleep (auto_ds) by default. Enabling
+	 * this reportedly causes "suspend/resume fails when not connected
+	 * to an Access Point." Therefore, the relevant code was removed
+	 * from here. */
 
 	if (priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
 		/* Send cmd to FW to enable/disable 11D function */
-- 
2.26.2

