From 406a2004d2fcee813041f77f2f69c5843b120eeb Mon Sep 17 00:00:00 2001
From: kitakar5525 <34676735+kitakar5525@users.noreply.github.com>
Date: Thu, 19 Sep 2019 23:15:24 +0900
Subject: [PATCH] nvme: add print debug for suspend

---
 drivers/nvme/host/pci.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
index 727b8503a..5a3f77321 100644
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -2624,6 +2624,8 @@ static int nvme_resume(struct device *dev)
 	struct nvme_dev *ndev = pci_get_drvdata(to_pci_dev(dev));
 	struct nvme_ctrl *ctrl = &ndev->ctrl;
 
+	pr_info("DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);
+
 	if (ndev->last_ps == U32_MAX ||
 	    nvme_set_power_state(ctrl, ndev->last_ps) != 0)
 		nvme_reset_ctrl(ctrl);
@@ -2654,9 +2656,13 @@ static int nvme_suspend(struct device *dev)
 	 */
 	if (pm_suspend_via_firmware() || !ctrl->npss ||
 	    !pcie_aspm_enabled(pdev)) {
+		pr_info("DEBUG: Passed %s %d, (pm_suspend_via_firmware() || !ctrl->npss)==true \n",__FUNCTION__,__LINE__);
+		pr_info("DEBUG: nvme_suspend(): using generic PCI power settings\n");
 		nvme_dev_disable(ndev, true);
 		return 0;
 	}
+	pr_info("DEBUG: Passed %s %d, (pm_suspend_via_firmware() || !ctrl->npss)==false \n",__FUNCTION__,__LINE__);
+	pr_info("DEBUG: nvme_suspend(): using host managed power settings\n");
 
 	nvme_start_freeze(ctrl);
 	nvme_wait_freeze(ctrl);
@@ -2699,6 +2705,8 @@ static int nvme_simple_suspend(struct device *dev)
 {
 	struct nvme_dev *ndev = pci_get_drvdata(to_pci_dev(dev));
 
+	pr_info("DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);
+
 	nvme_dev_disable(ndev, true);
 	return 0;
 }
@@ -2708,6 +2716,8 @@ static int nvme_simple_resume(struct device *dev)
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct nvme_dev *ndev = pci_get_drvdata(pdev);
 
+	pr_info("DEBUG: Passed %s %d \n",__FUNCTION__,__LINE__);
+
 	nvme_reset_ctrl(&ndev->ctrl);
 	return 0;
 }
-- 
2.23.0

